<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<properties resource="db.properties"/>
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 是否去除自动生成的代码中的注释 true：是 false：否-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 数据库连接信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}"
                        userId="root" password="root">
        </jdbcConnection>

        <!-- 默认 false，把 JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
             为 true 时解析为 java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- targetProject：生成 POJO 类的位置 -->
        <javaModelGenerator targetPackage="com.xm.pojo" targetProject="src/main/java">
            <!-- enableSubPackages：是否让 schema 作为包的后缀-->
            <property name="enableSubPackages" value="false"/>
            <!-- trimStrings：从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- targetProject：生成xml映射文件存放位置 -->
        <sqlMapGenerator targetPackage="com.xm.mapper" targetProject="src/main/java">
            <!-- enableSubPackages：是否让 schema 作为包的后缀-->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- targetProject：生成mapper类存放位置 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.xm.mapper" targetProject="src/main/java">
            <!-- enableSubPackages：是否让 schema 作为包的后缀-->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名
            tableName:要生成的表名
            domainObjectName:生成后的实例名
            enableCountByExample:Count语句中加入where条件查询，默认为true开启
            enableUpdateByExample:Update语句中加入where条件查询，默认为true开启
            enableDeleteByExample:Delete语句中加入where条件查询，默认为true开启
            enableSelectByExample:Select多条语句中加入where条件查询，默认为true开启
            selectByExampleQueryId:Select单个对象语句中加入where条件查询，默认为true开启
        -->
        <table tableName="permission" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <!-- <table tableName="product" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table> -->
        <!-- <table tableName="category" >
        	<property name="useActualColumnNames" value="true"/>
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="orders" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="orders_item" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="permission" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="product" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="product_image" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="property" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="property_value" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="referal_link" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="review" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="users" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="role" >
        	<generatedKey column="id" sqlStatement="JDBC"/>
        </table>
        <table tableName="users_role" >
        </table>
        <table tableName="role_permission" >
        </table> -->
    </context>
</generatorConfiguration>